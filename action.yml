name: 'Gradle Dependency Diff Report'
description: 'A GitHub Action that reports Gradle dependency differences.'
author: 'YUMEMI Inc.'
branding:
  icon: 'info'
  color: 'blue'
inputs:
  modules:
    description: 'Target Gradle modules separated by spaces.'
    required: true
  configuration:
    description: 'Configuration of Gradle dependencies task.'
    required: false
  project-dir:
    description: 'Root directory of the target application under the repository.'
    required: false
    default: '.'
  script:
    description: 'Bash script to run before Gradle dependencies task.'
    required: false
  report-title:
    description: 'Report title in job summary.'
    required: false
    default: 'Report from Gradle Dependency Diff Report action'
  head-ref:
    description: 'Target commit reference.'
    required: false
    default: ${{ github.sha }}
  repository: # opned for .github/workflows/ci.yml
    description: 'Target repository.'
    required: false
    default: ${{ github.repository }}
outputs:
  exists-diff:
    description: 'Whether there are any differences in dependencies.'
    value: ${{ steps.report.outputs.exists-diff }}
runs:
  using: 'composite'
  steps:
    - name: Report dependency differences
      id: report
      shell: bash
      env:
        MODULES: ${{ inputs.modules }}
        CONFIGURATION: ${{ inputs.configuration }}
        PROJECT_DIR: ${{ inputs.project-dir }}
        SCRIPT: ${{ inputs.script }}
        REPORT_TITLE: ${{ inputs.report-title }}
        HEAD_REF: ${{ inputs.head-ref }}
        IS_VALID_EVENT: ${{ contains(fromJSON('["pull_request","pull_request_target","merge_group"]'), github.event_name) }}
        GH_REPO: ${{ inputs.repository }} # for GitHub CLI
        GH_TOKEN: ${{ github.token }} # for GitHub CLI
      run: |
        echo "::debug::git version: $(git --version)"
        echo "::debug::gh version: $(gh --version | tr '\n' ' ')"
        source "$GITHUB_ACTION_PATH/raise_error.sh"

        readonly WORK_DIR="$GITHUB_ACTION_PATH"

        mkdir "$WORK_DIR/tools"
        mkdir "$WORK_DIR/deps"

        if [ "$IS_VALID_EVENT" != 'true' ]; then raise_error "This action supports 'pull_request', 'pull_request_target' and 'merge_group' events."; fi

        modules="$(echo "$MODULES" | xargs)"
        configuration="$(echo "$CONFIGURATION" | xargs)"

        if [ -z "$modules" ]; then raise_error "Specify 'modules' input."; fi
        if [[ "$configuration" =~ ' ' ]]; then raise_error "'configuration' input is not valid."; fi

        set -o noglob
        for mod in $modules ; do
          conf=''
          if [[ "$mod" =~ '|' ]]; then
            conf="${mod#*|}"
            mod="${mod%%|*}"
          fi
          if [ -z "$conf" ]; then conf="$configuration"; fi

          if [ -z "$mod" ]; then raise_error "'modules' input is not valid."; fi
          if [ -z "$conf" ]; then raise_error "Specify 'configuration' input."; fi

          mods+=("$mod")
          confs+=("$conf")
        done

        # get dependency-diff-tldr
        curl -f -L -o "$WORK_DIR/tools/dependency-diff-tldr-r8.jar" 'https://github.com/careem/dependency-diff-tldr/releases/download/v0.0.6/dependency-diff-tldr-r8.jar'
        if [ 'b76af4e71fe1bc3362207d648542337c21ab91e8' != "$(cat "$WORK_DIR/tools/dependency-diff-tldr-r8.jar" | openssl sha1 | awk '{print $2}')" ]; then
          raise_error "Incorrect checksum for dependency-diff-tldr-r8.jar."
        fi

        # get Dependency Tree Diff
        curl -f -L -o "$WORK_DIR/tools/dependency-tree-diff.jar" 'https://github.com/JakeWharton/dependency-tree-diff/releases/download/1.2.0/dependency-tree-diff.jar'
        if [ '949394274f37c06ac695b5d49860513e4d16e847' != "$(cat "$WORK_DIR/tools/dependency-tree-diff.jar" | openssl sha1 | awk '{print $2}')" ]; then
          raise_error "Incorrect checksum for dependency-tree-diff.jar."
        fi

        if [ -z "$HEAD_REF" ]; then raise_error "Specify 'head-ref' input."; fi

        gh repo clone "$GH_REPO" "$WORK_DIR/sources" -- --depth 1 --no-checkout > /dev/null 2>&1 || raise_error "May not have 'contents: read' permission."
        # ref: https://github.com/actions/checkout/blob/72f2cec99f417b1a1c5e2e88945068983b7965f9/src/git-auth-helper.ts#L55-L63
        cd "$WORK_DIR/sources" && git config --local 'http.https://github.com/.extraheader' "AUTHORIZATION: basic $(echo -n "x-access-token:$GH_TOKEN"|base64)"

        git fetch -q --depth 2 origin "$HEAD_REF" > /dev/null 2>&1 || raise_error "'head-ref' input is not valid."
        head_sha="$(git rev-parse FETCH_HEAD)"
        base_sha="$(git rev-parse FETCH_HEAD~1)"

        # do not create a file with the input string
        function create_file_name() {
          echo -n "$WORK_DIR/deps/$(echo -n "${1}-${2}-${3}" | openssl sha1 | awk '{print $2}').txt"
        }

        git checkout -q "$head_sha"
        eval "$SCRIPT"
        cd "$WORK_DIR/sources/$PROJECT_DIR"

        for i in "${!mods[@]}" ; do
          # on windows, files containing CR cause an error in diff tools
          ./gradlew -q ":${mods[$i]}:dependencies" --configuration "${confs[$i]}" | tr -d '\r' > "$(create_file_name ":${mods[$i]}" "${confs[$i]}" "$head_sha")"
        done

        cd "$WORK_DIR/sources"

        # cleanup
        git clean -df -q
        git checkout -q .

        git checkout -q "$base_sha"
        eval "$SCRIPT"
        cd "$WORK_DIR/sources/$PROJECT_DIR"

        for i in "${!mods[@]}" ; do
          ./gradlew -q ":${mods[$i]}:dependencies" --configuration "${confs[$i]}" | tr -d '\r' > "$(create_file_name ":${mods[$i]}" "${confs[$i]}" "$base_sha")"
        done

        exists=false

        {
          echo "### $REPORT_TITLE"
          echo ''
          echo "- head: [${head_sha:0:8}](https://github.com/${GH_REPO}/commit/${head_sha})"
          echo "- base: [${base_sha:0:8}](https://github.com/${GH_REPO}/commit/${base_sha})"

          for i in "${!mods[@]}" ; do
            result="$(java -jar "$WORK_DIR/tools/dependency-diff-tldr-r8.jar" \
              "$(create_file_name ":${mods[$i]}" "${confs[$i]}" "$base_sha")" "$(create_file_name ":${mods[$i]}" "${confs[$i]}" "$head_sha")")"

            echo ''

            if [ -n "$result" ]; then
              exists=true

              echo ":yellow_square: \`${mods[$i]}\` module (\`${confs[$i]}\` configuration)"
              echo ''
              echo '```'
              echo "$result"
              echo '```'

              result_detail="$(java -jar "$WORK_DIR/tools/dependency-tree-diff.jar" \
                "$(create_file_name ":${mods[$i]}" "${confs[$i]}" "$base_sha")" "$(create_file_name ":${mods[$i]}" "${confs[$i]}" "$head_sha")")"

              echo ''
              echo '<details>'
              echo '<summary>detail</summary>'
              echo ''
              echo '```diff'
              echo "$result_detail"
              echo '```'
              echo '</details>'
            else
              echo ":green_square: \`${mods[$i]}\` module (\`${confs[$i]}\` configuration)"
              echo ''
              echo '```'
              echo 'No differences in dependencies, when this module is the base point.'
              echo '```'
            fi
          done
        } >> "$GITHUB_STEP_SUMMARY"

        echo "exists-diff=$exists" >> "$GITHUB_OUTPUT"

        rm -fr "$WORK_DIR/tools"; rm -fr "$WORK_DIR/deps"; rm -fr "$WORK_DIR/sources"
